{
  "name": "gulp-bundle-assets",
  "version": "2.17.1",
  "description": "Create asset (js, css) bundles from a config file leveraging the power of streams",
  "main": "index.js",
  "scripts": {
    "test": "gulp ci",
    "coveralls": "gulp test-cover && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage"
  },
  "author": {
    "name": "Chris Montgomery",
    "url": "http://www.chrismontgomery.info/"
  },
  "contributors": [
    {
      "name": "Chris Montgomery",
      "url": "http://www.chrismontgomery.info/"
    },
    {
      "name": "Christian Sherland",
      "url": "https://github.com/csherland"
    },
    {
      "name": "Roberto Soares",
      "url": "https://github.com/roberto"
    }
  ],
  "license": "MIT",
  "keywords": [
    "gulp",
    "gulpfriendly",
    "bundle",
    "bundles",
    "bundling",
    "assets",
    "asset",
    "combine",
    "compress",
    "minify",
    "minification",
    "package",
    "static",
    "resource",
    "javascript",
    "css"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/areusjs/gulp-bundle-assets"
  },
  "bugs": {
    "url": "https://github.com/areusjs/gulp-bundle-assets/issues"
  },
  "dependencies": {
    "bluebird": "2.3.11",
    "duplexer2": "0.0.2",
    "graceful-fs": "3.0.5",
    "gulp": "3.8.10",
    "gulp-concat": "2.4.2",
    "gulp-if": "1.2.5",
    "gulp-less": "1.3.6",
    "gulp-minify-css": "0.3.11",
    "gulp-rev": "2.0.1",
    "gulp-sourcemaps": "1.2.8",
    "gulp-streamify": "0.0.5",
    "gulp-uglify": "1.0.1",
    "gulp-util": "3.0.1",
    "lazypipe": "0.2.2",
    "lodash": "2.4.1",
    "map-stream": "0.0.5",
    "merge-stream": "0.1.6",
    "mkdirp": "0.5.0",
    "pretty-hrtime": "^0.2.2",
    "readable-stream": "1.0.33",
    "through2": "0.6.3",
    "vinyl": "0.4.5"
  },
  "devDependencies": {
    "browserify": "^7.0.0",
    "coveralls": "2.11.2",
    "gulp-coffee": "2.2.0",
    "gulp-help": "1.3.0",
    "gulp-istanbul": "0.4.0",
    "gulp-istanbul-enforcer": "1.0.3",
    "gulp-jshint": "1.9.0",
    "gulp-mocha": "2.0.0",
    "gulp-nice-package": "0.0.2",
    "gulp-sass": "1.1.0",
    "gulp-shrinkwrap": "1.0.1",
    "jshint-stylish": "1.0.0",
    "mocha-lcov-reporter": "0.0.1",
    "multiline": "1.0.1",
    "proxyquire": "1.1.0",
    "rimraf": "2.2.8",
    "should": "4.3.0",
    "sinon": "1.12.1",
    "vinyl-source-stream": "1.0.0"
  },
  "readme": "# [gulp](http://gulpjs.com/)-bundle-assets [![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Coverage Status][coverage-image]][coverage-url]\n\n> Create static asset bundles from a config file: a common interface to combining, minifying, revisioning and more. Stack agnostic. Production ready.\n\nBy default uses the following gulp modules under the covers when creating bundles:\n\n1. [gulp-concat](https://github.com/wearefractal/gulp-concat)\n2. [gulp-sourcemaps](https://github.com/floridoo/gulp-sourcemaps)\n3. [gulp-uglify](https://github.com/terinjokes/gulp-uglify)\n4. [gulp-minify-css](https://github.com/jonathanepollack/gulp-minify-css)\n6. [gulp-rev](https://github.com/sindresorhus/gulp-rev)\n\nThis project's stream architecture also allows you to plugin [any gulp transform you wish](examples/custom-transforms).\n\n## Install\n\n```bash\n$ npm install gulp-bundle-assets --save-dev\n```\n\n## Basic Usage\n\nCreate the following files:\n\n```js\n// gulpfile.js\nvar gulp = require('gulp'),\n  bundle = require('gulp-bundle-assets');\n\ngulp.task('bundle', function() {\n  return gulp.src('./bundle.config.js')\n    .pipe(bundle())\n    .pipe(gulp.dest('./public'));\n});\n```\n\n```js\n// bundle.config.js\nmodule.exports = {\n  bundle: {\n    main: {\n      scripts: [\n        './content/js/foo.js',\n        './content/js/baz.js'\n      ],\n      styles: './content/**/*.css'\n    },\n    vendor: {\n      scripts: './bower_components/angular/angular.js'\n    }\n  },\n  copy: './content/**/*.{png,svg}'\n};\n```\n\nThen, calling\n\n```bash\n$ gulp bundle\n```\n\nWill result in the following folder structure:\n\n```\n-- public\n   |-- content\n   |   |-- fonts\n   |   |-- images\n   `main-8e6d79da.css\n   `main-5f17cd21.js\n   `vendor-d66b96f5.js\n```\n\n## Advanced Usage\n\nSee [the examples folder](examples) for many other config options. The [full example](examples/full) shows most\nall available options.\n\nAlso check out our [api docs](docs/API.md).\n\n## Integrating bundles into your app\n\nYou can programmatically render your bundles into your view via\n[your favorite templating engine](https://www.google.com/webhp?ion=1&espv=2&ie=UTF-8#q=node%20js%20templating%20engine)\nand the resulting `bundle.result.json` file. To generate the `bundle.result.json`, add a call to `bundle.results`:\n\n```js\n// gulpfile.js\nvar gulp = require('gulp'),\n  bundle = require('gulp-bundle-assets');\n\ngulp.task('bundle', function() {\n  return gulp.src('./bundle.config.js')\n    .pipe(bundle())\n    .pipe(bundle.results('./')) // arg is destination of bundle.result.json\n    .pipe(gulp.dest('./public'));\n});\n```\n\nWhich results in a `bundle.result.json` file similar to:\n\n```json\n{\n  \"main\": {\n    \"styles\": \"<link href='main-8e6d79da.css' media='screen' rel='stylesheet' type='text/css'/>\",\n    \"scripts\": \"<script src='main-5f17cd21.js' type='text/javascript'></script>\"\n  },\n  \"vendor\": {\n    \"scripts\": \"<script src='vendor-d66b96f5.js' type='text/javascript'></script>\",\n    \"styles\": \"<link href='vendor-23d5c9c6.css' media='screen' rel='stylesheet' type='text/css'/>\"\n  }\n}\n```\n\n[See here for a full example using hogan](examples/express-app-using-result-json)\n\n## Other Features\n\n1. [watch src files and only build specific bundles](examples/full/gulpfile.js)\n    * Greatly speeds up development\n    * e.g. split out vendor and custom js files into different bundles so the custom bundle continues to build quickly on src change\n2. [different bundles for different environments](examples/per-environment)\n    * e.g. `NODE_ENV=production gulp bundle` could produce a set of bundles with minified src while just `gulp bundle` would have unminified src  \n3. [custom gulp transforms](examples/custom-transforms/readme.md)\n    * e.g. use `gulp-less`, `gulp-sass`, `gulp-coffee`, etc to further transform your files\n4. [consume pre-minified src files](examples/full)\n    * e.g. use jquery.min.js in production and jquery.js in dev\n5. [custom result types](examples/custom-result)\n    * e.g. create a bundle.result.json for html, jsx or any custom results you can think of\n6. [works alongside 3rd party transformers](examples/browserify)\n    * e.g. create a bundle using [browserify](http://browserify.org/), [6to5](https://github.com/sebmck/6to5), etc.\n\n## Why?\n\nThere are a number of ways to bundle static assets for use in your webapp.\nTake for example:\n[lumbar](http://walmartlabs.github.io/lumbar/),\n[brunch](https://github.com/brunch/brunch),\n[webpack](http://webpack.github.io/),\n[browserify](http://browserify.org/),\n[optimizer](https://github.com/raptorjs/optimizer),\n[cartero](https://github.com/rotundasoftware/cartero),\n[assetify](https://github.com/bevacqua/node-assetify),\n[assets-packager](https://github.com/jakubpawlowicz/assets-packager), or\nsimply a mashup of custom [grunt](http://gruntjs.com/) or\n[gulp](http://gulpjs.com/) plugins. All of these approaches are good in their\nown way but none of them did everything we needed:\n\n* handle all file types: js, css, less, sass, coffeescript, images, fonts, etc...\n* handle a variety of js managers: amd, requirejs, etc...\n* support common transforms: compression, minification, revisioning\n* support custom transforms, e.g. [browserify](http://browserify.org/)\n* logic must be common across webapps. That is, no copy/pasting of tasks. This\ndisqualified straight gulp or grunt.\n* work with existing community plugins, namely [gulp](http://gulpjs.com/) tasks\n* work with src from multiple locations, e.g. bower_components, node_modules, etc\n* fast!\n\n`gulp-bundle-assets` accomplishes all these goals and more. A main guiding\nprinciple behind this project is to provide all necessary bundling functionality\nwhile still being as flexible and customizable as possible.\n\n## License\n\n[MIT](http://opensource.org/licenses/MIT)\n\n[npm-url]: https://npmjs.org/package/gulp-bundle-assets\n[npm-image]: http://img.shields.io/npm/v/gulp-bundle-assets.svg\n[travis-image]: https://travis-ci.org/areusjs/gulp-bundle-assets.svg?branch=master\n[travis-url]: https://travis-ci.org/areusjs/gulp-bundle-assets\n[coverage-image]: https://img.shields.io/coveralls/chmontgomery/gulp-bundle-assets.svg\n[coverage-url]: https://coveralls.io/r/chmontgomery/gulp-bundle-assets\n",
  "readmeFilename": "readme.md",
  "homepage": "https://github.com/areusjs/gulp-bundle-assets",
  "_id": "gulp-bundle-assets@2.17.1",
  "dist": {
    "shasum": "1ad4f26cb0552c25c13508ca8f632b83e300e54a"
  },
  "_from": "gulp-bundle-assets@",
  "_resolved": "https://registry.npmjs.org/gulp-bundle-assets/-/gulp-bundle-assets-2.17.1.tgz"
}
